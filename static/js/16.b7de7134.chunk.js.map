{"version":3,"sources":["pages/Data Pneumonia.js"],"names":["response2","response","concat","Tables","useState","pageTable1","setPageTable1","pageTable2","setPageTable2","dataTable1","setDataTable1","dataTable2","setDataTable2","totalResults","length","useEffect","slice","className","map","user","i","key","src","logop","alt","name","job","amount","resultsPerPage","onChange","p","label","layout","size","aria-label","aria-hidden"],"mappings":"gPAuBMA,EAAYC,IAASC,OAAO,IAiMnBC,UA/Lf,WAAkB,MAUoBC,mBAAS,GAV7B,mBAUTC,EAVS,KAUGC,EAVH,OAWoBF,mBAAS,GAX7B,mBAWTG,EAXS,KAWGC,EAXH,OAcoBJ,mBAAS,IAd7B,mBAcTK,EAdS,KAcGC,EAdH,OAeoBN,mBAAS,IAf7B,mBAeTO,EAfS,KAeGC,EAfH,KAmBVC,EAAeZ,IAASa,OAwB9B,OAVAC,qBAAU,WACRL,EAAcT,IAASe,MAhBF,IAgBSX,EAAa,GAhBtB,GAgB2CA,MAC/D,CAACA,IAIJU,qBAAU,WACRH,EAAcZ,EAAUgB,MAtBH,IAsBUT,EAAa,GAtBvB,GAsB4CA,MAChE,CAACA,IAGF,oCACE,kBAAC,IAAD,uBAIA,kBAAC,IAAD,qBACA,kBAAC,iBAAD,CAAgBU,UAAU,QACxB,kBAAC,QAAD,KACE,kBAAC,cAAD,KACE,4BACE,kBAAC,YAAD,kBACA,kBAAC,YAAD,cACA,kBAAC,YAAD,sBACA,kBAAC,YAAD,yBACA,kBAAC,YAAD,wCACA,kBAAC,YAAD,oBACA,kBAAC,YAAD,qBAGJ,kBAAC,YAAD,KACGR,EAAWS,KAAI,SAACC,EAAMC,GAAP,OACd,kBAAC,WAAD,CAAUC,IAAKD,GACb,kBAAC,YAAD,KACE,yBAAKH,UAAU,6BACb,kBAAC,SAAD,CAAQA,UAAU,uBAAuBK,IAAKC,IAAOC,IAAI,eACzD,6BACE,uBAAGP,UAAU,iBAAiBE,EAAKM,MACnC,uBAAGR,UAAU,4CAA4CE,EAAKO,QAIpE,kBAAC,YAAD,KACE,0BAAMT,UAAU,WAAhB,KAA6BE,EAAKQ,SAEpC,kBAAC,YAAD,KACE,0BAAMV,UAAU,WAAhB,KAA6BE,EAAKQ,SAEpC,kBAAC,YAAD,KACE,0BAAMV,UAAU,WAAhB,KAA6BE,EAAKQ,SAEpC,kBAAC,YAAD,KACE,0BAAMV,UAAU,WAAhB,KAA6BE,EAAKQ,SAEpC,kBAAC,YAAD,KACE,0BAAMV,UAAU,WAAhB,KAA6BE,EAAKQ,SAEpC,kBAAC,YAAD,KACE,0BAAMV,UAAU,WAAhB,KAA6BE,EAAKQ,eAY5C,kBAAC,cAAD,KACE,kBAAC,aAAD,CACEd,aAAcA,EACde,eAxFa,GAyFbC,SArFV,SAA4BC,GAC1BxB,EAAcwB,IAqFNC,MAAM,uBAKZ,kBAAC,IAAD,2BACA,kBAAC,iBAAD,CAAgBd,UAAU,QACxB,kBAAC,QAAD,KACE,kBAAC,cAAD,KACE,4BACE,kBAAC,YAAD,kBACA,kBAAC,YAAD,cACA,kBAAC,YAAD,sBACA,kBAAC,YAAD,yBACA,kBAAC,YAAD,wCACA,kBAAC,YAAD,oBACA,kBAAC,YAAD,mBACA,kBAAC,YAAD,kBAGJ,kBAAC,YAAD,KACGN,EAAWO,KAAI,SAACC,EAAMC,GAAP,OACd,kBAAC,WAAD,CAAUC,IAAKD,GACb,kBAAC,YAAD,KACE,yBAAKH,UAAU,6BACb,kBAAC,SAAD,CAAQA,UAAU,uBAAuBK,IAAKC,IAAOC,IAAI,eACzD,6BACE,uBAAGP,UAAU,iBAAiBE,EAAKM,MACnC,uBAAGR,UAAU,4CAA4CE,EAAKO,QAIpE,kBAAC,YAAD,KACE,0BAAMT,UAAU,WAAhB,KAA6BE,EAAKQ,SAEpC,kBAAC,YAAD,KACE,0BAAMV,UAAU,WAAhB,KAA6BE,EAAKQ,SAEpC,kBAAC,YAAD,KACE,0BAAMV,UAAU,WAAhB,KAA6BE,EAAKQ,SAEpC,kBAAC,YAAD,KACE,0BAAMV,UAAU,WAAhB,KAA6BE,EAAKQ,SAEpC,kBAAC,YAAD,KACE,0BAAMV,UAAU,WAAhB,KAA6BE,EAAKQ,SAEpC,kBAAC,YAAD,KACE,0BAAMV,UAAU,WAAhB,KAA6BE,EAAKQ,SAQpC,kBAAC,YAAD,KACE,yBAAKV,UAAU,+BACb,kBAAC,SAAD,CAAQe,OAAO,OAAOC,KAAK,OAAOC,aAAW,QAC3C,kBAAC,WAAD,CAAUjB,UAAU,UAAUkB,cAAY,UAE5C,kBAAC,SAAD,CAAQH,OAAO,OAAOC,KAAK,OAAOC,aAAW,UAC3C,kBAAC,YAAD,CAAWjB,UAAU,UAAUkB,cAAY,kBAQzD,kBAAC,cAAD,KACE,kBAAC,aAAD,CACEtB,aAAcA,EACde,eAnKa,GAoKbC,SA3JV,SAA4BC,GAC1BtB,EAAcsB,IA2JNC,MAAM","file":"static/js/16.b7de7134.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport PageTitle from '../components/Typography/PageTitle'\nimport SectionTitle from '../components/Typography/SectionTitle'\nimport CTA from '../components/CTA'\nimport logop from '../assets/img/logop.png'\nimport {\n  Table,\n  TableHeader,\n  TableCell,\n  TableBody,\n  TableRow,\n  TableFooter,\n  TableContainer,\n  Badge,\n  Avatar,\n  Button,\n  Pagination,\n} from '@windmill/react-ui'\nimport { EditIcon, TrashIcon } from '../icons'\n\nimport response from '../utils/demo/tableData'\n// make a copy of the data, for the second table\nconst response2 = response.concat([])\n\nfunction Tables() {\n  /**\n   * DISCLAIMER: This code could be badly improved, but for the sake of the example\n   * and readability, all the logic for both table are here.\n   * You would be better served by dividing each table in its own\n   * component, like Table(?) and TableWithActions(?) hiding the\n   * presentation details away from the page view.\n   */\n\n  // setup pages control for every table\n  const [pageTable1, setPageTable1] = useState(1)\n  const [pageTable2, setPageTable2] = useState(1)\n\n  // setup data for every table\n  const [dataTable1, setDataTable1] = useState([])\n  const [dataTable2, setDataTable2] = useState([])\n\n  // pagination setup\n  const resultsPerPage = 10\n  const totalResults = response.length\n\n  // pagination change control\n  function onPageChangeTable1(p) {\n    setPageTable1(p)\n  }\n\n  // pagination change control\n  function onPageChangeTable2(p) {\n    setPageTable2(p)\n  }\n\n  // on page change, load new sliced data\n  // here you would make another server request for new data\n  useEffect(() => {\n    setDataTable1(response.slice((pageTable1 - 1) * resultsPerPage, pageTable1 * resultsPerPage))\n  }, [pageTable1])\n\n  // on page change, load new sliced data\n  // here you would make another server request for new data\n  useEffect(() => {\n    setDataTable2(response2.slice((pageTable2 - 1) * resultsPerPage, pageTable2 * resultsPerPage))\n  }, [pageTable2])\n\n  return (\n    <>\n      <PageTitle>Data Pneumonia</PageTitle>\n\n      {/* <CTA /> */}\n\n      <SectionTitle>Simple table</SectionTitle>\n      <TableContainer className=\"mb-8\">\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Kabupaten</TableCell>\n              <TableCell>Tahun</TableCell>\n              <TableCell>Jumlah Balita</TableCell>\n              <TableCell>Jumlah Penderita</TableCell>\n              <TableCell>Jumlah Perkiraan Yang Ditangani</TableCell>\n              <TableCell>Status Gizi</TableCell>\n              <TableCell>Lingkungan</TableCell>\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {dataTable1.map((user, i) => (\n              <TableRow key={i}>\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <Avatar className=\"hidden mr-3 md:block\" src={logop} alt=\"User image\" />\n                    <div>\n                      <p className=\"font-semibold\">{user.name}</p>\n                      <p className=\"text-xs text-gray-600 dark:text-gray-400\">{user.job}</p>\n                    </div>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">$ {user.amount}</span>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">$ {user.amount}</span>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">$ {user.amount}</span>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">$ {user.amount}</span>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">$ {user.amount}</span>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">$ {user.amount}</span>\n                </TableCell>\n                {/* <TableCell>\n                  <Badge type={user.status}>{user.status}</Badge>\n                </TableCell> */}\n                {/* <TableCell>\n                  <span className=\"text-sm\">{new Date(user.date).toLocaleDateString()}</span>\n                </TableCell> */}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter>\n          <Pagination\n            totalResults={totalResults}\n            resultsPerPage={resultsPerPage}\n            onChange={onPageChangeTable1}\n            label=\"Table navigation\"\n          />\n        </TableFooter>\n      </TableContainer>\n\n      <SectionTitle>Table with actions</SectionTitle>\n      <TableContainer className=\"mb-8\">\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Kabupaten</TableCell>\n              <TableCell>Tahun</TableCell>\n              <TableCell>Jumlah Balita</TableCell>\n              <TableCell>Jumlah Penderita</TableCell>\n              <TableCell>Jumlah Perkiraan Yang Ditangani</TableCell>\n              <TableCell>Status Gizi</TableCell>\n              <TableCell>Lingkungan</TableCell>\n              <TableCell>Actions</TableCell>\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {dataTable2.map((user, i) => (\n              <TableRow key={i}>\n                <TableCell>\n                  <div className=\"flex items-center text-sm\">\n                    <Avatar className=\"hidden mr-3 md:block\" src={logop} alt=\"User image\" />\n                    <div>\n                      <p className=\"font-semibold\">{user.name}</p>\n                      <p className=\"text-xs text-gray-600 dark:text-gray-400\">{user.job}</p>\n                    </div>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">$ {user.amount}</span>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">$ {user.amount}</span>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">$ {user.amount}</span>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">$ {user.amount}</span>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">$ {user.amount}</span>\n                </TableCell>\n                <TableCell>\n                  <span className=\"text-sm\">$ {user.amount}</span>\n                </TableCell>\n                {/* <TableCell>\n                  <Badge type={user.status}>{user.status}</Badge>\n                </TableCell> */}\n                {/* <TableCell>\n                  <span className=\"text-sm\">{new Date(user.date).toLocaleDateString()}</span>\n                </TableCell> */}\n                <TableCell>\n                  <div className=\"flex items-center space-x-4\">\n                    <Button layout=\"link\" size=\"icon\" aria-label=\"Edit\">\n                      <EditIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                    </Button>\n                    <Button layout=\"link\" size=\"icon\" aria-label=\"Delete\">\n                      <TrashIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                    </Button>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter>\n          <Pagination\n            totalResults={totalResults}\n            resultsPerPage={resultsPerPage}\n            onChange={onPageChangeTable2}\n            label=\"Table navigation\"\n          />\n        </TableFooter>\n      </TableContainer>\n    </>\n  )\n}\n\nexport default Tables\n"],"sourceRoot":""}