{"version":3,"sources":["pages/Charts.js","components/Chart/ChartCard.js","components/Chart/ChartLegend.js","utils/demo/chartsData.js"],"names":["Charts","className","title","doughnutOptions","legends","doughnutLegends","lineOptions","lineLegends","barOptions","barLegends","Chart","children","ChartLegend","map","legend","key","color","data","datasets","backgroundColor","label","labels","options","responsive","cutoutPercentage","display","borderColor","fill","tooltips","mode","intersect","hover","scales","x","scaleLabel","labelString","y","borderWidth"],"mappings":"4IAAA,mEAwCeA,UAzBf,WACE,OACE,oCACE,kBAAC,IAAD,eAEA,yBAAKC,UAAU,kCACb,kBAAC,IAAD,CAAWC,MAAM,YACf,kBAAC,IAAaC,KACd,kBAAC,IAAD,CAAaC,QAASC,OAGxB,kBAAC,IAAD,CAAWH,MAAM,SACf,kBAAC,IAASI,KACV,kBAAC,IAAD,CAAaF,QAASG,OAGxB,kBAAC,IAAD,CAAWL,MAAM,QACf,kBAAC,IAAQM,KACT,kBAAC,IAAD,CAAaJ,QAASK,W,gCCjChC,oBAWeC,IATf,YAAqC,IAApBC,EAAmB,EAAnBA,SAAUT,EAAS,EAATA,MACzB,OACE,yBAAKD,UAAU,8DACb,uBAAGA,UAAU,uDAAuDC,GACnES,K,gCCNP,oBAeeC,IAbf,YAAmC,IAAZR,EAAW,EAAXA,QACrB,OACE,yBAAKH,UAAU,+EACZG,EAAQS,KAAI,SAACC,GAAD,OACX,yBAAKb,UAAU,oBAAoBc,IAAKD,EAAOZ,OAC7C,0BAAMD,UAAS,oCAA+Ba,EAAOE,MAAtC,mBACf,8BAAOF,EAAOZ,c,gCCRxB,4MAAO,IAAMG,EAAkB,CAC7B,CAAEH,MAAO,SAAUc,MAAO,cAC1B,CAAEd,MAAO,SAAUc,MAAO,gBAC1B,CAAEd,MAAO,SAAUc,MAAO,kBAGfT,EAAc,CACzB,CAAEL,MAAO,SAAUc,MAAO,cAC1B,CAAEd,MAAO,SAAUc,MAAO,iBAIfP,EAAa,CACxB,CAAEP,MAAO,SAAUc,MAAO,gBAC1B,CAAEd,MAAO,SAAUc,MAAO,kBAGfb,EAAkB,CAC7Bc,KAAM,CACJC,SAAU,CACR,CACED,KAAM,CAAC,GAAI,GAAI,IAKfE,gBAAiB,CAAC,UAAW,UAAW,WACxCC,MAAO,cAGXC,OAAQ,CAAC,SAAU,SAAU,WAE/BC,QAAS,CACPC,YAAY,EACZC,iBAAkB,IAEpBV,OAAQ,CACNW,SAAS,IAIAnB,EAAc,CACzBW,KAAM,CACJI,OAAQ,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,QACjEH,SAAU,CACR,CACEE,MAAO,SAKPD,gBAAiB,UACjBO,YAAa,UACbT,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC/BU,MAAM,GAER,CACEP,MAAO,SACPO,MAAM,EAKNR,gBAAiB,UACjBO,YAAa,UACbT,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,OAIrCK,QAAS,CACPC,YAAY,EACZK,SAAU,CACRC,KAAM,QACNC,WAAW,GAEbC,MAAO,CACLF,KAAM,UACNC,WAAW,GAEbE,OAAQ,CACNC,EAAG,CACDR,SAAS,EACTS,WAAY,CACVT,SAAS,EACTU,YAAa,UAGjBC,EAAG,CACDX,SAAS,EACTS,WAAY,CACVT,SAAS,EACTU,YAAa,YAKrBrB,OAAQ,CACNW,SAAS,IAIAjB,EAAa,CACxBS,KAAM,CACJI,OAAQ,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,QACjEH,SAAU,CACR,CACEE,MAAO,QACPD,gBAAiB,UAEjBkB,YAAa,EACbpB,KAAM,EAAE,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,KAEjC,CACEG,MAAO,OACPD,gBAAiB,UAEjBkB,YAAa,EACbpB,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,OAIrCK,QAAS,CACPC,YAAY,GAEdT,OAAQ,CACNW,SAAS","file":"static/js/9.d304b464.chunk.js","sourcesContent":["import React from 'react'\n\nimport ChartCard from '../components/Chart/ChartCard'\nimport { Doughnut, Line, Bar } from 'react-chartjs-2'\nimport ChartLegend from '../components/Chart/ChartLegend'\nimport PageTitle from '../components/Typography/PageTitle'\nimport {\n  doughnutOptions,\n  lineOptions,\n  barOptions,\n  doughnutLegends,\n  lineLegends,\n  barLegends,\n} from '../utils/demo/chartsData'\n\nfunction Charts() {\n  return (\n    <>\n      <PageTitle>Charts</PageTitle>\n\n      <div className=\"grid gap-6 mb-8 md:grid-cols-2\">\n        <ChartCard title=\"Doughnut\">\n          <Doughnut {...doughnutOptions} />\n          <ChartLegend legends={doughnutLegends} />\n        </ChartCard>\n\n        <ChartCard title=\"Lines\">\n          <Line {...lineOptions} />\n          <ChartLegend legends={lineLegends} />\n        </ChartCard>\n\n        <ChartCard title=\"Bars\">\n          <Bar {...barOptions} />\n          <ChartLegend legends={barLegends} />\n        </ChartCard>\n      </div>\n    </>\n  )\n}\n\nexport default Charts\n","import React from 'react'\n\nfunction Chart({ children, title }) {\n  return (\n    <div className=\"min-w-0 p-4 bg-white rounded-lg shadow-xs dark:bg-gray-800\">\n      <p className=\"mb-4 font-semibold text-gray-800 dark:text-gray-300\">{title}</p>\n      {children}\n    </div>\n  )\n}\n\nexport default Chart\n","import React from 'react'\n\nfunction ChartLegend({ legends }) {\n  return (\n    <div className=\"flex justify-center mt-4 space-x-3 text-sm text-gray-600 dark:text-gray-400\">\n      {legends.map((legend) => (\n        <div className=\"flex items-center\" key={legend.title}>\n          <span className={`inline-block w-3 h-3 mr-1 ${legend.color} rounded-full`}></span>\n          <span>{legend.title}</span>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default ChartLegend\n","export const doughnutLegends = [\n  { title: 'Tinggi', color: 'bg-red-500' },\n  { title: 'Rendah', color: 'bg-green-600' },\n  { title: 'Sedang', color: 'bg-yellow-600' },\n]\n\nexport const lineLegends = [\n  { title: 'Tinggi', color: 'bg-red-600' },\n  { title: 'Rendah', color: 'bg-green-600' },\n  // { title: 'Sedang', color: 'bg-yellow-600' },\n]\n\nexport const barLegends = [\n  { title: 'Rendah', color: 'bg-green-600' },\n  { title: 'Sedang', color: 'bg-yellow-600' },\n]\n\nexport const doughnutOptions = {\n  data: {\n    datasets: [\n      {\n        data: [33, 33, 33],\n        /**\n         * These colors come from Tailwind CSS palette\n         * https://tailwindcss.com/docs/customizing-colors/#default-color-palette\n         */\n        backgroundColor: ['#0694a2', '#1c64f2', '#7e3af2'],\n        label: 'Dataset 1',\n      },\n    ],\n    labels: ['Tinggi', 'Rendah', 'Sedang'],\n  },\n  options: {\n    responsive: true,\n    cutoutPercentage: 80,\n  },\n  legend: {\n    display: false,\n  },\n}\n\nexport const lineOptions = {\n  data: {\n    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n    datasets: [\n      {\n        label: 'Rendah',\n        /**\n         * These colors come from Tailwind CSS palette\n         * https://tailwindcss.com/docs/customizing-colors/#default-color-palette\n         */\n        backgroundColor: '#0694a2',\n        borderColor: '#0694a2',\n        data: [43, 48, 40, 54, 67, 73, 70],\n        fill: false,\n      },\n      {\n        label: 'Sedang',\n        fill: false,\n        /**\n         * These colors come from Tailwind CSS palette\n         * https://tailwindcss.com/docs/customizing-colors/#default-color-palette\n         */\n        backgroundColor: '#7e3af2',\n        borderColor: '#7e3af2',\n        data: [24, 50, 64, 74, 52, 51, 65],\n      },\n    ],\n  },\n  options: {\n    responsive: true,\n    tooltips: {\n      mode: 'index',\n      intersect: false,\n    },\n    hover: {\n      mode: 'nearest',\n      intersect: true,\n    },\n    scales: {\n      x: {\n        display: true,\n        scaleLabel: {\n          display: true,\n          labelString: 'Month',\n        },\n      },\n      y: {\n        display: true,\n        scaleLabel: {\n          display: true,\n          labelString: 'Value',\n        },\n      },\n    },\n  },\n  legend: {\n    display: false,\n  },\n}\n\nexport const barOptions = {\n  data: {\n    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n    datasets: [\n      {\n        label: 'Shoes',\n        backgroundColor: '#0694a2',\n        // borderColor: window.chartColors.red,\n        borderWidth: 1,\n        data: [-3, 14, 52, 74, 33, 90, 70],\n      },\n      {\n        label: 'Bags',\n        backgroundColor: '#7e3af2',\n        // borderColor: window.chartColors.blue,\n        borderWidth: 1,\n        data: [66, 33, 43, 12, 54, 62, 84],\n      },\n    ],\n  },\n  options: {\n    responsive: true,\n  },\n  legend: {\n    display: false,\n  },\n}\n"],"sourceRoot":""}