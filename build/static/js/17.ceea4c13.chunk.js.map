{"version":3,"sources":["pages/Data Status Gizi.js"],"names":["response2","response","concat","Tabels2","useState","pageTable1","setPageTable1","pageTable2","setPageTable2","dataTable1","setDataTable1","dataTable2","setDataTable2","totalResults","length","useEffect","slice","className","map","user","i","key","src","logop","alt","name","job","amount","resultsPerPage","onChange","p","label","layout","size","aria-label","aria-hidden"],"mappings":"gPAuBMA,EAAYC,IAASC,OAAO,IAiLnBC,UA/Kf,WAAmB,MAUmBC,mBAAS,GAV5B,mBAUVC,EAVU,KAUEC,EAVF,OAWmBF,mBAAS,GAX5B,mBAWVG,EAXU,KAWEC,EAXF,OAcmBJ,mBAAS,IAd5B,mBAcVK,EAdU,KAcEC,EAdF,OAemBN,mBAAS,IAf5B,mBAeVO,EAfU,KAeEC,EAfF,KAmBXC,EAAeZ,IAASa,OAwB9B,OAVAC,qBAAU,WACRL,EAAcT,IAASe,MAhBF,IAgBSX,EAAa,GAhBtB,GAgB2CA,MAC/D,CAACA,IAIJU,qBAAU,WACRH,EAAcZ,EAAUgB,MAtBH,IAsBUT,EAAa,GAtBvB,GAsB4CA,MAChE,CAACA,IAGF,oCACE,kBAAC,IAAD,yBAIA,kBAAC,IAAD,qBACA,kBAAC,iBAAD,CAAgBU,UAAU,QACxB,kBAAC,QAAD,KACE,kBAAC,cAAD,KACE,4BACE,kBAAC,YAAD,kBACA,kBAAC,YAAD,cACA,kBAAC,YAAD,0BACA,kBAAC,YAAD,mBACA,kBAAC,YAAD,sBAGJ,kBAAC,YAAD,KACGR,EAAWS,KAAI,SAACC,EAAMC,GAAP,OACd,kBAAC,WAAD,CAAUC,IAAKD,GACb,kBAAC,YAAD,KACE,yBAAKH,UAAU,6BACb,kBAAC,SAAD,CAAQA,UAAU,uBAAuBK,IAAKC,IAAOC,IAAI,eACzD,6BACE,uBAAGP,UAAU,iBAAiBE,EAAKM,MACnC,uBAAGR,UAAU,4CAA4CE,EAAKO,QAIpE,kBAAC,YAAD,KACE,0BAAMT,UAAU,WAAhB,KAA6BE,EAAKQ,SAEpC,kBAAC,YAAD,KACE,0BAAMV,UAAU,WAAhB,KAA6BE,EAAKQ,SAEpC,kBAAC,YAAD,KACE,0BAAMV,UAAU,WAAhB,KAA6BE,EAAKQ,SAEpC,kBAAC,YAAD,KACE,0BAAMV,UAAU,WAAhB,KAA6BE,EAAKQ,eAY5C,kBAAC,cAAD,KACE,kBAAC,aAAD,CACEd,aAAcA,EACde,eAhFa,GAiFbC,SA7EV,SAA4BC,GAC1BxB,EAAcwB,IA6ENC,MAAM,uBAKZ,kBAAC,IAAD,2BACA,kBAAC,iBAAD,CAAgBd,UAAU,QACxB,kBAAC,QAAD,KACE,kBAAC,cAAD,KACE,4BACE,kBAAC,YAAD,kBACA,kBAAC,YAAD,cACA,kBAAC,YAAD,0BACA,kBAAC,YAAD,mBACA,kBAAC,YAAD,oBACA,kBAAC,YAAD,kBAGJ,kBAAC,YAAD,KACGN,EAAWO,KAAI,SAACC,EAAMC,GAAP,OACd,kBAAC,WAAD,CAAUC,IAAKD,GACb,kBAAC,YAAD,KACE,yBAAKH,UAAU,6BACb,kBAAC,SAAD,CAAQA,UAAU,uBAAuBK,IAAKC,IAAOC,IAAI,eACzD,6BACE,uBAAGP,UAAU,iBAAiBE,EAAKM,MACnC,uBAAGR,UAAU,4CAA4CE,EAAKO,QAIpE,kBAAC,YAAD,KACE,0BAAMT,UAAU,WAAhB,KAA6BE,EAAKQ,SAEpC,kBAAC,YAAD,KACE,0BAAMV,UAAU,WAAhB,KAA6BE,EAAKQ,SAEpC,kBAAC,YAAD,KACE,0BAAMV,UAAU,WAAhB,KAA6BE,EAAKQ,SAEpC,kBAAC,YAAD,KACE,0BAAMV,UAAU,WAAhB,KAA6BE,EAAKQ,SAQpC,kBAAC,YAAD,KACE,yBAAKV,UAAU,+BACb,kBAAC,SAAD,CAAQe,OAAO,OAAOC,KAAK,OAAOC,aAAW,QAC3C,kBAAC,WAAD,CAAUjB,UAAU,UAAUkB,cAAY,UAE5C,kBAAC,SAAD,CAAQH,OAAO,OAAOC,KAAK,OAAOC,aAAW,UAC3C,kBAAC,YAAD,CAAWjB,UAAU,UAAUkB,cAAY,kBAQzD,kBAAC,cAAD,KACE,kBAAC,aAAD,CACEtB,aAAcA,EACde,eAnJa,GAoJbC,SA3IV,SAA4BC,GAC1BtB,EAAcsB,IA2INC,MAAM","file":"static/js/17.ceea4c13.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nimport PageTitle from '../components/Typography/PageTitle'\r\nimport SectionTitle from '../components/Typography/SectionTitle'\r\nimport CTA from '../components/CTA'\r\nimport logop from '../assets/img/logop.png'\r\nimport {\r\n  Table,\r\n  TableHeader,\r\n  TableCell,\r\n  TableBody,\r\n  TableRow,\r\n  TableFooter,\r\n  TableContainer,\r\n  Badge,\r\n  Avatar,\r\n  Button,\r\n  Pagination,\r\n} from '@windmill/react-ui'\r\nimport { EditIcon, TrashIcon } from '../icons'\r\n\r\nimport response from '../utils/demo/tableData'\r\n// make a copy of the data, for the second table\r\nconst response2 = response.concat([])\r\n\r\nfunction Tabels2() {\r\n  /**\r\n   * DISCLAIMER: This code could be badly improved, but for the sake of the example\r\n   * and readability, all the logic for both table are here.\r\n   * You would be better served by dividing each table in its own\r\n   * component, like Table(?) and TableWithActions(?) hiding the\r\n   * presentation details away from the page view.\r\n   */\r\n\r\n  // setup pages control for every table\r\n  const [pageTable1, setPageTable1] = useState(1)\r\n  const [pageTable2, setPageTable2] = useState(1)\r\n\r\n  // setup data for every table\r\n  const [dataTable1, setDataTable1] = useState([])\r\n  const [dataTable2, setDataTable2] = useState([])\r\n\r\n  // pagination setup\r\n  const resultsPerPage = 10\r\n  const totalResults = response.length\r\n\r\n  // pagination change control\r\n  function onPageChangeTable1(p) {\r\n    setPageTable1(p)\r\n  }\r\n\r\n  // pagination change control\r\n  function onPageChangeTable2(p) {\r\n    setPageTable2(p)\r\n  }\r\n\r\n  // on page change, load new sliced data\r\n  // here you would make another server request for new data\r\n  useEffect(() => {\r\n    setDataTable1(response.slice((pageTable1 - 1) * resultsPerPage, pageTable1 * resultsPerPage))\r\n  }, [pageTable1])\r\n\r\n  // on page change, load new sliced data\r\n  // here you would make another server request for new data\r\n  useEffect(() => {\r\n    setDataTable2(response2.slice((pageTable2 - 1) * resultsPerPage, pageTable2 * resultsPerPage))\r\n  }, [pageTable2])\r\n\r\n  return (\r\n    <>\r\n      <PageTitle>Data Status Gizi</PageTitle>\r\n\r\n      {/* <CTA /> */}\r\n\r\n      <SectionTitle>Simple table</SectionTitle>\r\n      <TableContainer className=\"mb-8\">\r\n        <Table>\r\n          <TableHeader>\r\n            <tr>\r\n              <TableCell>Kabupaten</TableCell>\r\n              <TableCell>Tahun</TableCell>\r\n              <TableCell>Balita di Timbang</TableCell>\r\n              <TableCell>Gizi Buruk</TableCell>\r\n              <TableCell>Kurang Gizi</TableCell>\r\n            </tr>\r\n          </TableHeader>\r\n          <TableBody>\r\n            {dataTable1.map((user, i) => (\r\n              <TableRow key={i}>\r\n                <TableCell>\r\n                  <div className=\"flex items-center text-sm\">\r\n                    <Avatar className=\"hidden mr-3 md:block\" src={logop} alt=\"User image\" />\r\n                    <div>\r\n                      <p className=\"font-semibold\">{user.name}</p>\r\n                      <p className=\"text-xs text-gray-600 dark:text-gray-400\">{user.job}</p>\r\n                    </div>\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <span className=\"text-sm\">$ {user.amount}</span>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <span className=\"text-sm\">$ {user.amount}</span>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <span className=\"text-sm\">$ {user.amount}</span>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <span className=\"text-sm\">$ {user.amount}</span>\r\n                </TableCell>\r\n                {/* <TableCell>\r\n                  <Badge type={user.status}>{user.status}</Badge>\r\n                </TableCell> */}\r\n                {/* <TableCell>\r\n                  <span className=\"text-sm\">{new Date(user.date).toLocaleDateString()}</span>\r\n                </TableCell> */}\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n        <TableFooter>\r\n          <Pagination\r\n            totalResults={totalResults}\r\n            resultsPerPage={resultsPerPage}\r\n            onChange={onPageChangeTable1}\r\n            label=\"Table navigation\"\r\n          />\r\n        </TableFooter>\r\n      </TableContainer>\r\n\r\n      <SectionTitle>Table with actions</SectionTitle>\r\n      <TableContainer className=\"mb-8\">\r\n        <Table>\r\n          <TableHeader>\r\n            <tr>\r\n              <TableCell>Kabupaten</TableCell>\r\n              <TableCell>Tahun</TableCell>\r\n              <TableCell>Balita di Timbang</TableCell>\r\n              <TableCell>Gizi Buruk</TableCell>\r\n              <TableCell>Kurang Gizi</TableCell>\r\n              <TableCell>Actions</TableCell>\r\n            </tr>\r\n          </TableHeader>\r\n          <TableBody>\r\n            {dataTable2.map((user, i) => (\r\n              <TableRow key={i}>\r\n                <TableCell>\r\n                  <div className=\"flex items-center text-sm\">\r\n                    <Avatar className=\"hidden mr-3 md:block\" src={logop} alt=\"User image\" />\r\n                    <div>\r\n                      <p className=\"font-semibold\">{user.name}</p>\r\n                      <p className=\"text-xs text-gray-600 dark:text-gray-400\">{user.job}</p>\r\n                    </div>\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <span className=\"text-sm\">$ {user.amount}</span>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <span className=\"text-sm\">$ {user.amount}</span>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <span className=\"text-sm\">$ {user.amount}</span>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <span className=\"text-sm\">$ {user.amount}</span>\r\n                </TableCell>\r\n                {/* <TableCell>\r\n                  <Badge type={user.status}>{user.status}</Badge>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <span className=\"text-sm\">{new Date(user.date).toLocaleDateString()}</span>\r\n                </TableCell> */}\r\n                <TableCell>\r\n                  <div className=\"flex items-center space-x-4\">\r\n                    <Button layout=\"link\" size=\"icon\" aria-label=\"Edit\">\r\n                      <EditIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\r\n                    </Button>\r\n                    <Button layout=\"link\" size=\"icon\" aria-label=\"Delete\">\r\n                      <TrashIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\r\n                    </Button>\r\n                  </div>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n        <TableFooter>\r\n          <Pagination\r\n            totalResults={totalResults}\r\n            resultsPerPage={resultsPerPage}\r\n            onChange={onPageChangeTable2}\r\n            label=\"Table navigation\"\r\n          />\r\n        </TableFooter>\r\n      </TableContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tabels2\r\n"],"sourceRoot":""}